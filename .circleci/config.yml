version: 2

default: &default
  docker:
    - image: cimg/node:18.7.0
installation_dependency: &installation_dependency
  name: Install Serverless and AWS CLI
  command: |
    sudo apt-get update -y
    #installing awscli
    sudo apt install -y awscli
    #install serverless
    sudo npm install -g serverless
install_deploysuite: &install_deploysuite
  name: Installation of install_deploysuite.
  command: |
    git clone --branch master https://github.com/topcoder-platform/tc-deploy-scripts ../buildscript
    cp ./../buildscript/master_deploy.sh .
    cp ./../buildscript/buildenv.sh .
    cp ./../buildscript/awsconfiguration.sh .
restore_cache: &restore_cache
  key: docker-node-{{ checksum "package-lock.json" }}
install_npm: &install_npm
  name: Install node_modules
  command: |
    npm install
save_cache: &save_cache
  key: docker-node-{{ checksum "package-lock.json" }}
  paths:
    - node_modules
build_steps: &build_steps # Initialization.
  - checkout
  - run: *installation_dependency
  - run: *install_deploysuite
  # Restoration of node_modules from cache.
  - restore_cache: *restore_cache
  - run: *install_npm
  # Caching node modules.
  - save_cache: *save_cache
  # deploy app
  - run:
      name: Deploy via Masterscript v2
      command: |
        ./awsconfiguration.sh $DEPLOY_ENV
        source awsenvconf
        ./buildenv.sh -e $DEPLOY_ENV -b ${LOGICAL_ENV}-${APPNAME}-deployvar
        source buildenvvar             
        ./master_deploy.sh -d LAMBDA -e $DEPLOY_ENV -s ${LOGICAL_ENV}-${APPNAME}-appvar

jobs:
  # Build & Deploy against development backend
  "build-dev":
    <<: *default
    environment:
      DEPLOY_ENV: "DEV"
      LOGICAL_ENV: "dev"
      APPNAME: "tc-lambda-tc-profiledata"
      # deploy app
    steps: *build_steps

  "build-prod":
    <<: *default
    environment:
      DEPLOY_ENV: "PROD"
      LOGICAL_ENV: "prod"
      APPNAME: "tc-lambda-tc-profiledata"
      # deploy app
    steps: *build_steps

workflows:
  version: 2
  build:
    jobs:
      # NO dev environment for this lambda
      # Development builds are executed on "develop" branch only.
      # - "build-dev":
      #     context : org-global
      #     filters:
      #       branches:
      #         only:
      #           - develop
      # production builds are executed on "master" branch only.
      - "build-prod":
          context: org-global
          filters:
            branches:
              only:
                - main
